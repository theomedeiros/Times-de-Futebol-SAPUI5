/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "com/projetos/times/Component-preload",
	"modules": {
		"com/projetos/times/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"com/projetos/times/model/models\",\n\t\"com/projetos/times/controller/ErrorHandler\"\n], function(UIComponent, Device, models, ErrorHandler) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"com.projetos.times.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * In this method, the FLP and device models are set and the router is initialized.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t// set the FLP model\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t// call the base component's init function and create the App view\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t},\n\n\t\t/**\n\t\t * The component is destroyed by UI5 automatically.\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tdestroy: function() {\n\t\t\tthis._oErrorHandler.destroy();\n\t\t\t// call the base component's destroy function\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t},\n\n\t\t/**\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t * @public\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t */\n\t\tgetContentDensityClass: function() {\n\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t} else {\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._sContentDensityClass;\n\t\t}\n\n\t});\n\n});",
		"com/projetos/times/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\"\n], function(Controller, History) {\n\t\"use strict\";\n\n\treturn Controller.extend(\"com.projetos.times.controller.BaseController\", {\n\n\t\tgetRouter: function() {\n\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t},\n\n\t\tgetModel: function(sName) {\n\t\t\treturn this.getView().getModel(sName);\n\t\t},\n\n\t\tsetModel: function(oModel, sName) {\n\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t},\n\n\t\tgetResourceBundle: function() {\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t},\n\n\t\tonNavBack: function() {\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\n\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Otherwise we go backwards with a forward history\n\t\t\t\tvar bReplace = true;\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\n\t\t\t}\n\t\t}\n\n\t});\n\n});",
		"com/projetos/times/controller/CreateTransaction.controller.js": "sap.ui.define([\r\n\t\"com/projetos/times/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\"\r\n\r\n], function(BaseController, JSONModel, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"com.projetos.times.controller.CreateTransaction\", {\r\n\r\n\t\tonInit: function(oEvent) {\r\n\t\t\t\r\n\t\t\t// Anexa os métodos que serão executados no hit do Router\r\n\t\t\tthis.getRouter().getRoute(\"createTransaction\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\t// Instância do modelo\r\n\t\t\tthis._oODataModel = this.getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\t\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\t\r\n\t\t\tsap.ui.component.load({\r\n\t\t\t\tname: \"com.projetos.transacoes\",\r\n\t\t\t\t// Use the below URL to run the extended application when SAP-delivered application is deployed on cloud\r\n\t\t\t\turl: jQuery.sap.getModulePath(\"com.projetos.times\") + \"/parent\"\r\n\t\t\t\t\t// we use a URL relative to our own component\r\n\t\t\t\t\t// extension application is deployed with customer namespace\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t/* @type sap.ui.core.ComponentContainer */\r\n\t\t\tvar oComponent = this.byId(\"componentContainer\");\r\n\t\t\t\r\n\t\t\toComponent.setUrl(\"com.projetos.transacoes\");\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n});",
		"com/projetos/times/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"com/projetos/times/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"com/projetos/times/model/formatter\",\n\t\"sap/m/MessageBox\",\n\t\"sap/m/MessageToast\"\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.projetos.times.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t});\n\n\t\t\t// Anexa os métodos que serão executados no hit do Router\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\t//Instancia um modelo JSON com propriedades necessárias para a visão Detail\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\t\t\t// Instância do modelo\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Updates the item count within the line item table's header\n\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t * @private\n\t\t */\n\t\tonListUpdateFinished: function(oEvent) {\n\t\t\tvar sTitle,\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tif (iTotalItems) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t} else {\n\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view delete button. Deletes the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonDelete: function() {\n\t\t\tvar that = this;\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/Nome\"),\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\n\n\t\t\tvar fnMyAfterDeleted = function() {\n\t\t\t\tMessageToast.show(sSuccessMessage);\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\n\t\t\t};\n\t\t\tthis._confirmDeletionByUser({\n\t\t\t\tquestion: sQuestion\n\t\t\t}, [sPath], fnMyAfterDeleted);\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view edit button. Open a view to enable the user update the selected item. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonEdit: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\tvar sObjectPath = this.getView().getElementBinding().getPath();\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\n\t\t\t\tmode: \"update\",\n\t\t\t\tobjectPath: sObjectPath\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\n\t\t\tfor (var value in oParameter) {\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\n\t\t\t}\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tthis._bindView(\"/Times('\" + oParameter.Id + \"')\");\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Event handler for binding change event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding(),\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.Id;\n\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\n\n\t\t},\n\n\t\t/**\n\t\t * Event handler for metadata loaded event\n\t\t * @function\n\t\t * @private\n\t\t */\n\n\t\t/* eslint-disable */ // using more then 4 parameters for a function is justified here\n\t\t_confirmDeletionByUser: function(oConfirmation, aPaths, fnAfterDeleted, fnDeleteCanceled, fnDeleteConfirmed) {\n\t\t\tvar that = this;\n\t\t\t/* eslint-enable */\n\t\t\t// Callback function for when the user decides to perform the deletion\n\t\t\tvar fnDelete = function() {\n\t\t\t\t// Calls the oData Delete service\n\t\t\t\tthis._callDelete(aPaths, fnAfterDeleted);\n\t\t\t}.bind(this);\n\n\t\t\t// Opens the confirmation dialog\n\t\t\tMessageBox.show(oConfirmation.question, {\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\tfnDelete();\n\t\t\t\t\t\tthat.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t} else if (fnDeleteCanceled) {\n\t\t\t\t\t\tfnDeleteCanceled();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Performs the deletion of a list of entities.\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnAfterDeleted (optional) - called after deletion is done. \n\t\t * @return a Promise that will be resolved as soon as the deletion process ended successfully.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_callDelete: function(aPaths, fnAfterDeleted) {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\tvar fnFailed = function() {\n\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t}.bind(this);\n\t\t\tvar fnSuccess = function() {\n\t\t\t\tif (fnAfterDeleted) {\n\t\t\t\t\tfnAfterDeleted();\n\t\t\t\t\tthis._oODataModel.setUseBatch(true);\n\t\t\t\t}\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t}.bind(this);\n\t\t\treturn this._deleteOneEntity(aPaths[0], fnSuccess, fnFailed);\n\t\t},\n\n\t\t/**\n\t\t * Deletes the entity from the odata model\n\t\t * @param {array} aPaths -  Array of strings representing the context paths to the entities to be deleted. Currently only one is supported.\n\t\t * @param {callback} fnSuccess - Event handler for success operation.\n\t\t * @param {callback} fnFailed - Event handler for failure operation.\n\t\t * @function\n\t\t * @private\n\t\t */\n\t\t_deleteOneEntity: function(sPath, fnSuccess, fnFailed) {\n\t\t\tvar oPromise = new Promise(function(fnResolve, fnReject) {\n\t\t\t\tthis._oODataModel.setUseBatch(false);\n\t\t\t\tthis._oODataModel.remove(sPath, {\n\t\t\t\t\tsuccess: fnResolve,\n\t\t\t\t\terror: fnReject,\n\t\t\t\t\tasync: true\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t\toPromise.then(fnSuccess, fnFailed);\n\t\t\treturn oPromise;\n\t\t},\n\n\t\tonTransacao: function(oEvent) {\n\t\t\t\n\t\t\tthis.getRouter().navTo(\"createTransaction\", {\n\t\t\t\tId: this.getView().getBindingContext().getObject().Id\n\t\t\t});\n\t\t\t\n\t\t}\n\n\t});\n});",
		"com/projetos/times/model/formatter.js": "sap.ui.define([], function() {\n\t\"use strict\";\n\n\treturn {\n\t\t/**\n\t\t * Rounds the currency value to 2 digits\n\t\t *\n\t\t * @public\n\t\t * @param {string} sValue value to be formatted\n\t\t * @returns {string} formatted currency value with 2 digits\n\t\t */\n\t\tcurrencyValue: function(sValue) {\n\t\t\tif (!sValue) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t},\n\t\t\n\t\t// Função para contar idade\n\t\tcontaIdade: function(sDate) {\n\t\t\tvar anos = 0,\n\t\t\t\tdiaMaior = false,\n\t\t\t\tmesMaior = false,\n\t\t\t\tmesIgual = false;\n\t\t\t\t\n\t\t\tvar currentDate = new Date();\n\t\t\t\n\t\t\tanos = ( currentDate.getFullYear() - sDate.getFullYear() );\n\t\t\t\n\t\t\t// Valida possível não passagem do aniversário\n\t\t\tif(sDate.getMonth() > currentDate.getMonth()){\n\t\t\t\tmesMaior = true;\n\t\t\t} else if(sDate.getMonth() === currentDate.getMonth()){\n\t\t\t\tmesIgual = true;\n\t\t\t}\n\t\t\t\n\t\t\tif(sDate.getDate() > currentDate.getDate()){\n\t\t\t\tdiaMaior = true;\n\t\t\t}\n\t\t\t\n\t\t\tif(mesMaior) {\n\t\t\t\tanos -= 1;\n\t\t\t} else if (mesIgual && !diaMaior) {\n\t\t\t\tanos -= 1;\n\t\t\t}\n\t\t\t\n\t\t\treturn anos;\n\t\t}\n\t};\n\n});",
		"com/projetos/times/view/CreateTransaction.view.xml": "<mvc:View \n\txmlns:core=\"sap.ui.core\" \n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\tcontrollerName=\"com.projetos.times.controller.CreateTransaction\"\n\txmlns:html=\"http://www.w3.org/1999/xhtml\"\n\t>\n\t<core:ComponentContainer\n\t\tid=\"componentContainer\"\n\t\t/>\n</mvc:View>",
		"com/projetos/times/view/Detail.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.Detail\"\n\txmlns=\"sap.m\" \n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\t>\n\t<semantic:DetailPage \n\t\tid=\"page\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\ttitle=\"{i18n>detailTitle}\"\n\t\tbusy=\"{detailView>/busy}\"\n\t\tbusyIndicatorDelay=\"{detailView>/delay}\"\n\t\t>\n\t\t<semantic:content>\n\t\t\t<ObjectHeader\n\t\t\t\tid=\"objectHeader\"\n\t\t\t\ticon=\"img/{Logo}.png\"\n\t\t\t\ttitle=\"{NomeCompleto}\"\n\t\t\t\tnumber=\"Fundação: {AnoFundacao}\"\n\t\t\t\t/>\n\t\t\t<IconTabBar \n\t\t\t\tid=\"iconTabBar\" \n\t\t\t\tclass=\"sapUiResponsiveContentPadding\"\n\t\t\t\t>\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter \n\t\t\t\t\t\tid=\"iconTabBarFilter1\"\n\t\t\t\t\t\ticon=\"sap-icon://activity-individual\" \n\t\t\t\t\t\ttooltip=\"{i18n>detailIconTabBarJogadores}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tid=\"lineItemsList\" \n\t\t\t\t\t\t\t\twidth=\"auto\" \n\t\t\t\t\t\t\t\titems=\"{ToJogadores}\" \n\t\t\t\t\t\t\t\tupdateFinished=\"onListUpdateFinished\"\n\t\t\t\t\t\t\t\tnoDataText=\"{i18n>detailLineItemTableNoDataText}\"\n\t\t\t\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" \n\t\t\t\t\t\t\t\tclass=\"sapUiResponsiveMargin\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<headerToolbar>\n\t\t\t\t\t\t\t\t\t<Toolbar \n\t\t\t\t\t\t\t\t\t\tid=\"lineItemsToolbar\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Title \n\t\t\t\t\t\t\t\t\t\t\tid=\"lineItemsHeader\" \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{detailView>/lineItemListTitle}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t</headerToolbar>\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{i18n>tableColumn1}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column \n\t\t\t\t\t\t\t\t\t\tminScreenWidth=\"Tablet\" \n\t\t\t\t\t\t\t\t\t\tdemandPopin=\"true\" \n\t\t\t\t\t\t\t\t\t\thAlign=\"Right\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{i18n>tableColumn2}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column \n\t\t\t\t\t\t\t\t\t\tminScreenWidth=\"Tablet\" \n\t\t\t\t\t\t\t\t\t\tdemandPopin=\"true\" \n\t\t\t\t\t\t\t\t\t\thAlign=\"Right\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{i18n>tableColumn3}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column \n\t\t\t\t\t\t\t\t\t\tminScreenWidth=\"Tablet\" \n\t\t\t\t\t\t\t\t\t\tdemandPopin=\"true\" \n\t\t\t\t\t\t\t\t\t\thAlign=\"Right\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{i18n>tableColumn4}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column \n\t\t\t\t\t\t\t\t\t\tminScreenWidth=\"Tablet\" \n\t\t\t\t\t\t\t\t\t\tdemandPopin=\"true\" \n\t\t\t\t\t\t\t\t\t\thAlign=\"Right\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\t\t\t\t\ttext=\"{i18n>tableColumn5}\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectIdentifier \n\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"{Nome}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"{Nacionalidade}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\t\t\tnumber=\"{Altura}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectNumber\n\t\t\t\t\t\t\t\t\t\t\t\tnumber=\"{path: 'DataNasc', formatter: '.formatter.contaIdade'}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"{Posição}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter \n\t\t\t\t\t\tid=\"iconTabBarFilter2\" \n\t\t\t\t\t\ticon=\"sap-icon://visits\" \n\t\t\t\t\t\ttooltip=\"{i18n>detailIconTabBarTransferencias}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<HBox\n\t\t\t\t\t\t\t\tjustifyContent=\"Center\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttext=\"Realizar transação\"\n\t\t\t\t\t\t\t\t\t\tpress=\"onTransacao\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t\t<semantic:editAction>\n\t\t\t<semantic:EditAction\n\t\t\t\tid=\"edit\" \n\t\t\t\tpress=\"onEdit\"\n\t\t\t\t/>\n\t\t</semantic:editAction>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button \n\t\t\t\tenabled=\"true\"\n\t\t\t\tid=\"deleteButton\" \n\t\t\t\tpress=\"onDelete\" \n\t\t\t\ttext=\"Delete\"\n\t\t\t\t/>\n\t\t</semantic:customFooterContent>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/projetos/times/controller/CreateEntity.controller.js": "sap.ui.define([\n\t\"com/projetos/times/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/m/MessageBox\"\n\n], function(BaseController, JSONModel, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.projetos.times.controller.CreateEntity\", {\n\n\t\t_oBinding: {},\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\tvar that = this;\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\n\t\t\tthis._oViewModel = new JSONModel({\n\t\t\t\tenableCreate: false,\n\t\t\t\tdelay: 0,\n\t\t\t\tbusy: false,\n\t\t\t\tmode: \"create\",\n\t\t\t\tviewTitle: \"\"\n\t\t\t});\n\t\t\tthis.setModel(this._oViewModel, \"viewModel\");\n\n\t\t\t// Register the view with the message manager\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tthat._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonSave: function() {\n\t\t\tvar that = this,\n\t\t\t\toModel = this.getModel();\n\n\t\t\t// abort if the  model has not been changed\n\t\t\tif (!oModel.hasPendingChanges()) {\n\t\t\t\tMessageBox.information(\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\n\t\t\tif (this._oViewModel.getProperty(\"/mode\") === \"edit\") {\n\t\t\t\t// attach to the request completed event of the batch\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\n\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\n\t\t\t\t\t\tthat._fnUpdateSuccess();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\n\t\t\t\t\t\tMessageBox.error(that._oResourceBundle.getText(\"updateError\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toModel.submitChanges();\n\t\t},\n\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\n\t\t\tvar oParams = oEvent.getParameters();\n\t\t\tvar aRequests = oEvent.getParameters().requests;\n\t\t\tvar oRequest;\n\t\t\tif (oParams.success) {\n\t\t\t\tif (aRequests) {\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\n\t\t\t\t\t\tif (!oRequest.success) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \n\t\t * @function\n\t\t * @public\n\t\t */\n\t\tonCancel: function() {\n\t\t\t// check if the model has been changed\n\t\t\tif (this.getModel().hasPendingChanges()) {\n\t\t\t\t// get user confirmation first\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\n\t\t\t} else {\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t// cancel without confirmation\n\t\t\t\tthis._navBack();\n\t\t\t}\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* Internal functions\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Navigates back in the browser history, if the entry was created by this app.\n\t\t * If not, it navigates to the Details page\n\t\t * @private\n\t\t */\n\t\t_navBack: function() {\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\n\n\t\t\tthis.getView().unbindObject();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\n\t\t * @private\n\t\t */\n\t\t_showConfirmQuitChanges: function() {\n\t\t\tvar oComponent = this.getOwnerComponent(),\n\t\t\t\toModel = this.getModel();\n\t\t\tvar that = this;\n\t\t\tMessageBox.confirm(\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\n\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\t\t\t\toModel.resetChanges();\n\t\t\t\t\t\t\tthat._navBack();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for editing the selected object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\t\t_onEdit: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\n\t\t\t\toView = this.getView();\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\n\n\t\t\toView.bindElement({\n\t\t\t\tpath: oData.objectPath\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Prepares the view for creating new object\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\n\t\t * @private\n\t\t */\n\n\t\t_onCreate: function(oEvent) {\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\n\t\t\t\tthis.getView().unbindObject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"create\");\n\t\t\tvar oContext = this._oODataModel.createEntry(\"Times\", {\n\t\t\t\tsuccess: this._fnEntityCreated.bind(this),\n\t\t\t\terror: this._fnEntityCreationFailed.bind(this)\n\t\t\t});\n\t\t\tthis.getView().setBindingContext(oContext);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the save button can be enabled\n\t\t * @private\n\t\t */\n\t\t_validateSaveEnablement: function() {\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\n\t\t\tvar oControl;\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\n\t\t\t\toControl = aInputControls[m].control;\n\t\t\t\tif (aInputControls[m].required) {\n\t\t\t\t\tvar sValue = oControl.getValue();\n\t\t\t\t\tif (!sValue) {\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkForErrorMessages();\n\t\t},\n\n\t\t/**\n\t\t * Checks if there is any wrong inputs that can not be saved.\n\t\t * @private\n\t\t */\n\n\t\t_checkForErrorMessages: function() {\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\n\t\t\tif (aMessages.length > 0) {\n\t\t\t\tvar bEnableCreate = true;\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\n\t\t\t\t\t\tbEnableCreate = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\n\t\t\t} else {\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of updating an object\n\t\t * @private\n\t\t */\n\t\t_fnUpdateSuccess: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getView().unbindObject();\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the success of creating an object\n\t\t *@param {object} oData the response of the save action\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreated: function(oData) {\n\t\t\tvar sObjectPath = this.getModel().createKey(\"Times\", oData);\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t\tthis.getRouter().getTargets().display(\"object\");\n\t\t},\n\n\t\t/**\n\t\t * Handles the failure of creating/updating an object\n\t\t * @private\n\t\t */\n\t\t_fnEntityCreationFailed: function() {\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\n\t\t},\n\n\t\t/**\n\t\t * Handles the onDisplay event which is triggered when this view is displayed \n\t\t * @param {sap.ui.base.Event} oEvent the on display event\n\t\t * @private\n\t\t */\n\t\t_onDisplay: function(oEvent) {\n\t\t\tvar oData = oEvent.getParameter(\"data\");\n\t\t\tif (oData && oData.mode === \"update\") {\n\t\t\t\tthis._onEdit(oEvent);\n\t\t\t} else {\n\t\t\t\tthis._onCreate(oEvent);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Gets the form fields\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\n\t\t * @private\n\t\t */\n\t\t_getFormFields: function(oSimpleForm) {\n\t\t\tvar aControls = [];\n\t\t\tvar aFormContent = oSimpleForm.getContent();\n\t\t\tvar sControlType;\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\n\t\t\t\t\taControls.push({\n\t\t\t\t\t\tcontrol: aFormContent[i],\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aControls;\n\t\t}\n\t});\n\n});",
		"com/projetos/times/controller/App.controller.js": "sap.ui.define([\n\t\"com/projetos/times/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\"\n], function(BaseController, JSONModel) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.projetos.times.controller.App\", {\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel,\n\t\t\t\tfnSetAppNotBusy,\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\toViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0,\n\t\t\t\titemToSelect: null,\n\t\t\t\taddEnabled: false\n\n\t\t\t});\n\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t};\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t// apply content density mode to root view\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t}\n\t});\n\n});",
		"com/projetos/times/view/NotFound.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\"\n\t>\n\t<MessagePage \n\t\tid=\"page\" \n\t\ttitle=\"{i18n>notFoundTitle}\" \n\t\ttext=\"{i18n>notFoundText}\"\n\t\ticon=\"{sap-icon://document}\" \n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\t/>\n</mvc:View>",
		"com/projetos/times/controller/ErrorHandler.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/m/MessageBox\"\n], function(UI5Object, MessageBox) {\n\t\"use strict\";\n\n\treturn UI5Object.extend(\"com.projetos.times.controller.ErrorHandler\", {\n\n\t\t/**\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t * @class\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t * @public\n\t\t * @alias com.projetos.times.controller.ErrorHandler\n\t\t */\n\t\tconstructor: function(oComponent) {\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\tthis._oComponent = oComponent;\n\t\t\tthis._oModel = oComponent.getModel();\n\t\t\tthis._bMessageOpen = false;\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\n\t\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t\tthis._showMetadataError(oParams.response);\n\t\t\t}, this);\n\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event Handler for Request Fail event\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {object} oEvent an event containing the response data\n\t\t * @private\n\t\t */\n\t\tonRequestFailed: function(oEvent) {\n\t\t\tvar oParams = oEvent.getParameters();\n\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showMetadataError: function(sDetails) {\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function(sAction) {\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox}.\n\t\t * The user can try to refresh the metadata.\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\n\n\t\t\tMessageBox.error(\n\t\t\t\tsMessageHeader, {\n\t\t\t\t\tid: \"ErrorMessageBox\",\n\t\t\t\t\ttitle: sTitle,\n\t\t\t\t\tdetails: sDetails,\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\n\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t * Only the first error message will be display.\n\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t * @private\n\t\t */\n\t\t_showServiceError: function(sDetails) {\n\t\t\tif (this._bMessageOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._bMessageOpen = true;\n\t\t\tMessageBox.error(\n\t\t\t\tthis._sErrorText, {\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\n\t\t\t\t\tdetails: sDetails.responseText,\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\n\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n});",
		"com/projetos/times/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\"com/projetos/times/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/GroupHeaderListItem\",\n\t\"sap/ui/Device\",\n\t\"com/projetos/times/model/formatter\",\n\t\"sap/m/MessageBox\"\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"com.projetos.times.controller.Master\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonInit: function() {\n\t\t\t\t// Control state model\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\t//Instancia um modelo JSON com propriedades necessárias para a visão Master\n\t\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t\t// taken care of by the master list itself.\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\t\t\t\tthis._oList = oList;\n\t\t\t\t// keeps the filter and search state\n\t\t\t\tthis._oListFilterState = {\n\t\t\t\t\taFilter: [],\n\t\t\t\t\taSearch: []\n\t\t\t\t};\n\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Anexa os métodos que serão executados no hit do Router\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\t\t// Instância do modelo\n\t\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t// Evento executado ao final do carregamento da lista\n\t\t\tonUpdateFinished: function(oEvent) {\n\t\t\t\t// Atualiza o contador da lista com o valor encontrado sem necessidade de chamada $count\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t\t// hide pull to refresh if necessary\n\t\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t},\n\n\t\t\t// Evento de busca na lista\n\t\t\tonSearch: function(oEvent) {\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t\tthis.onRefresh();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\t\tif (sQuery) {\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Nome\", FilterOperator.Contains, sQuery)];\n\t\t\t\t} else {\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t\t}\n\t\t\t\tthis._applyFilterSearch();\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t\t * and group settings and refreshes the list binding.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonRefresh: function() {\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t\t},\n\t\t\t\n\t\t\t// Evento de execução ao clicar em um item da lista\n\t\t\tonSelectionChange: function(oEvent) {\n\t\t\t\tvar that = this;\n\t\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\n\t\t\t\tvar fnLeave = function() {\n\t\t\t\t\tthat._oODataModel.resetChanges();\n\t\t\t\t\tthat._showDetail(oItem);\n\t\t\t\t};\n\t\t\t\tif (this._oODataModel.hasPendingChanges()) {\n\t\t\t\t\tthis._leaveEditPage(fnLeave);\n\t\t\t\t} else {\n\t\t\t\t\tthis._showDetail(oItem);\n\t\t\t\t}\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t},\n\t\t\t\n\t\t\t// Caso nenhuma rota seja atingida pelo Router a Lista remove os itens selecionados\n\t\t\tonBypassed: function() {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t\t * These headers are inserted into the master list to\n\t\t\t * group the master list's items.\n\t\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t\t * @public\n\t\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t\t */\n\t\t\tcreateGroupHeader: function(oGroup) {\n\t\t\t\treturn new GroupHeaderListItem({\n\t\t\t\t\ttitle: oGroup.text,\n\t\t\t\t\tupperCase: false\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Função de navegação para página anterior\n\t\t\tonNavBack: function() {\n\t\t\t\t\n\t\t\t\tBaseController.onNavBack();\n\t\t\t\t// var oHistory = sap.ui.core.routing.History.getInstance(),\n\t\t\t\t// \tsPreviousHash = oHistory.getPreviousHash(),\n\t\t\t\t// \toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\t\t// if (sPreviousHash !== undefined) {\n\t\t\t\t// \t// The history contains a previous entry\n\t\t\t\t// \thistory.go(-1);\n\t\t\t\t// } else {\n\t\t\t\t// \t// Navigate back to FLP home\n\t\t\t\t// \toCrossAppNavigator.toExternal({\n\t\t\t\t// \t\ttarget: {\n\t\t\t\t// \t\t\tshellHash: \"#Shell-home\"\n\t\t\t\t// \t\t}\n\t\t\t\t// \t});\n\t\t\t\t// }\n\t\t\t},\n\t\t\t\n\t\t\t// Evento para criação de item novo na lista\n\t\t\tonAdd: function() {\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\n\t\t\t\tthis.getRouter().getTargets().display(\"create\");\n\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Creates the model for the view\n\t\t\t * @private\n\t\t\t */\n\t\t\t_createViewModel: function() {\n\t\t\t\treturn new JSONModel({\n\t\t\t\t\tisFilterBarVisible: false,\n\t\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\t\tsortBy: \"Nome\",\n\t\t\t\t\tgroupBy: \"None\"\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Ask for user confirmation to leave the edit page and discard all changes\n\t\t\t * @param {object} fnLeave - handles discard changes\n\t\t\t * @param {object} fnLeaveCancelled - handles cancel\n\t\t\t * @private\n\t\t\t */\n\t\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\n\t\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\n\t\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\n\n\t\t\t\tMessageBox.show(sQuestion, {\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\n\t\t\t\t\ttitle: sTitle,\n\t\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\t\t\tonClose: function(oAction) {\n\t\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\n\t\t\t\t\t\t\tfnLeave();\n\t\t\t\t\t\t} else if (fnLeaveCancelled) {\n\t\t\t\t\t\t\tfnLeaveCancelled();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * If the master route was hit (empty hash) we have to set\n\t\t\t * the hash to to the first item in the list as soon as the\n\t\t\t * listLoading is done and the first item in the list is known\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onMasterMatched: function() {\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\n\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\tId: encodeURIComponent(\"1\")\n\t\t\t\t}, true);\n\t\t},\n\n\t\t/**\n\t\t * Shows the selected item on the detail page\n\t\t * On phones a additional history entry is created\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t * @private\n\t\t */\n\t\t_showDetail: function(oItem) {\n\t\t\tvar bReplace = !Device.system.phone;\n\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\tId: encodeURIComponent(oItem.getBindingContext().getProperty(\"Id\"))\n\t\t\t}, bReplace);\n\t\t},\n\n\t\t/**\n\t\t * Sets the item count on the master list header\n\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t * @private\n\t\t */\n\t\t_updateListItemCount: function(iTotalItems) {\n\t\t\tvar sTitle;\n\t\t\t// only update the counter if the length is final\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t * @private\n\t\t */\n\t\t_applyFilterSearch: function() {\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\tif (aFilters.length !== 0) {\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t * @param {string} sFilterBarText the selected filter value\n\t\t * @private\n\t\t */\n\t\t_updateFilterBar: function(sFilterBarText) {\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t},\n\n\t\t/**\n\t\t * Internal helper method that adds \"/\" to the item's path \n\t\t * @private\n\t\t */\n\t\t_fnGetPathWithSlash: function(sPath) {\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\n\t\t}\n\n\t});\n});",
		"com/projetos/times/view/Master.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.Master\" \n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns:core=\"sap.ui.core\" \n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\"\n\t>\n\t<semantic:MasterPage\n\t\tid=\"page\" \n\t\ttitle=\"{masterView>/title}\" \n\t\tnavButtonPress=\"onNavBack\" \n\t\tshowNavButton=\"true\"\n\t\t>\n\t\t<semantic:subHeader>\n\t\t\t<Bar \n\t\t\t\tid=\"headerBar\"\n\t\t\t\t>\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField \n\t\t\t\t\t\tid=\"searchField\" \n\t\t\t\t\t\tshowRefreshButton=\"{= !${device>/support/touch} }\" \n\t\t\t\t\t\ttooltip=\"{i18n>masterSearchTooltip}\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"/>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh\n\t\t\t\tid=\"pullToRefresh\"\n\t\t\t\tvisible=\"{device>/support/touch}\"\n\t\t\t\trefresh=\"onRefresh\"\n\t\t\t\t/>\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List \n\t\t\t\tid=\"list\" \n\t\t\t\titems=\"{ path: '/Times', sorter: { path: 'Id', descending: false }, groupHeaderFactory: '.createGroupHeader' }\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" \n\t\t\t\tnoDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" \n\t\t\t\tgrowing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" \n\t\t\t\tselectionChange=\"onSelectionChange\"\n\t\t\t\t>\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar \n\t\t\t\t\t\tactive=\"true\" \n\t\t\t\t\t\tid=\"filterBar\" \n\t\t\t\t\t\tvisible=\"{masterView>/isFilterBarVisible}\" \n\t\t\t\t\t\tpress=\"onOpenViewSettings\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" \n\t\t\t\t\t\t\ttext=\"{masterView>/filterBarLabel}\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem \n\t\t\t\t\t\ttype=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" \n\t\t\t\t\t\tpress=\"onSelectionChange\"\n\t\t\t\t\t\ttitle=\"{Nome}\"\n\t\t\t\t\t\t/>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t\t<semantic:addAction>\n\t\t\t<semantic:AddAction \n\t\t\t\tid=\"addButton\" \n\t\t\t\tenabled=\"{appView>/addEnabled}\" \n\t\t\t\tpress=\"onAdd\"\n\t\t\t\t/>\n\t\t</semantic:addAction>\n\t</semantic:MasterPage>\n</mvc:View>",
		"com/projetos/times/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n</core:FragmentDefinition>",
		"com/projetos/times/view/DetailObjectNotFound.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.BaseController\" \n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns=\"sap.m\"\n\t>\n\t<MessagePage \n\t\tid=\"page\"\n\t\ttitle=\"{i18n>detailTitle}\" \n\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\ticon=\"{sap-icon://product}\" \n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" \n\t\tnavButtonPress=\"onNavBack\"\n\t\t/>\n</mvc:View>",
		"com/projetos/times/view/DetailNoObjectsAvailable.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.BaseController\" \n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns=\"sap.m\"\n\t>\n\t<MessagePage \n\t\tid=\"page\" \n\t\ttitle=\"{i18n>notAvailableViewTitle}\" \n\t\ttext=\"{i18n>noObjectsAvailableText}\" \n\t\ticon=\"{sap-icon://product}\" \n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\" \n\t\tnavButtonPress=\"onNavBack\"\n\t\t/>\n</mvc:View>",
		"com/projetos/times/view/CreateEntity.view.xml": "<mvc:View \n\tcontrollerName=\"com.projetos.times.controller.CreateEntity\" \n\txmlns:core=\"sap.ui.core\" \n\txmlns:f=\"sap.ui.layout.form\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" \n\txmlns:l=\"sap.ui.layout\" \n\txmlns:mvc=\"sap.ui.core.mvc\" \n\txmlns:semantic=\"sap.m.semantic\"\n\txmlns:smart=\"sap.ui.comp.smartfield\" \n\txmlns=\"sap.m\"\n\t>\n\t<semantic:DetailPage \n\t\tid=\"page\" \n\t\tnavButtonPress=\"onNavBack\" \n\t\ttitle=\"{viewModel>/viewTitle}\" \n\t\tbusy=\"{viewModel>/busy}\"\n\t\t>\n\t\t<semantic:content>\n\t\t\t<f:SimpleForm \n\t\t\t\tclass=\"editableForm\" \n\t\t\t\tcolumnsL=\"1\" \n\t\t\t\tcolumnsM=\"1\" \n\t\t\t\teditable=\"true\" \n\t\t\t\temptySpanL=\"4\" \n\t\t\t\temptySpanM=\"4\"\n\t\t\t\tid=\"newEntitySimpleForm\"\n\t\t\t\tlabelSpanL=\"3\" \n\t\t\t\tlabelSpanM=\"3\"\n\t\t\t\tlayout=\"ResponsiveGridLayout\" \n\t\t\t\tmaxContainerCols=\"2\"\n\t\t\t\tminWidth=\"1024\"\n\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit'? 'Editar Time': 'Novo Time'}\"\n\t\t\t\t>\n\t\t\t\t<f:content>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"Id\"\n\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"Id\"\n\t\t\t\t\t\tid=\"Id_id\" \n\t\t\t\t\t\tvalueLiveUpdate=\"true\" \n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"{= ${viewModel>/mode} === 'edit'? false: true}\" \n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Id', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"Logo\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"Logo\"\n\t\t\t\t\t\tid=\"Logo_id\" valueLiveUpdate=\"true\"\n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\"\n\t\t\t\t\t\tenabled=\"true\" \n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Logo', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"Nome\" \n\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"Nome\" \n\t\t\t\t\t\tid=\"Nome_id\" valueLiveUpdate=\"true\" \n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\" \n\t\t\t\t\t\tenabled=\"true\" \n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Nome', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"Nome Completo\"\n\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"NomeCompleto\"\n\t\t\t\t\t\tid=\"NomeCompleto_id\" \n\t\t\t\t\t\tvalueLiveUpdate=\"true\" \n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\" \n\t\t\t\t\t\tenabled=\"true\" \n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'NomeCompleto', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"AnoFundacao\" \n\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"AnoFundacao\" \n\t\t\t\t\t\tid=\"AnoFundacao_id\"\n\t\t\t\t\t\ttype=\"Number\"\n\t\t\t\t\t\tvalueLiveUpdate=\"true\" \n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\" \n\t\t\t\t\t\tenabled=\"true\" visible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'AnoFundacao', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Label \n\t\t\t\t\t\ttext=\"Estado\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t<Input \n\t\t\t\t\t\tname=\"Estado\"\n\t\t\t\t\t\tid=\"Estado_id\" valueLiveUpdate=\"true\" \n\t\t\t\t\t\tliveChange=\"_validateSaveEnablement\" \n\t\t\t\t\t\tenabled=\"true\"\n\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\tvalue=\"{ path: 'Estado', type: 'sap.ui.model.odata.type.String' , constraints:{ nullable:false } }\"\n\t\t\t\t\t\t/>\n\t\t\t\t</f:content>\n\t\t\t</f:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:saveAction>\n\t\t\t<semantic:SaveAction \n\t\t\t\tid=\"save\" \n\t\t\t\tenabled=\"{viewModel>/enableCreate}\" \n\t\t\t\tpress=\"onSave\"\n\t\t\t\t/>\n\t\t</semantic:saveAction>\n\t\t<semantic:cancelAction>\n\t\t\t<semantic:CancelAction \n\t\t\t\tid=\"cancel\" \n\t\t\t\tpress=\"onCancel\"\n\t\t\t\t/>\n\t\t</semantic:cancelAction>\n\t</semantic:DetailPage>\n</mvc:View>",
		"com/projetos/times/view/App.view.xml": "<mvc:View\n\tcontrollerName=\"com.projetos.times.controller.App\" \n\txmlns:mvc=\"sap.ui.core.mvc\" \n\tdisplayBlock=\"true\" \n\tbusy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\" \n\txmlns=\"sap.m\"\n\t>\n\t<SplitApp \n\t\tid=\"idAppControl\"\n\t\t/>\n</mvc:View>",
		"com/projetos/times/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\n\tvar oMockServer,\n\t\t_sAppModulePath = \"com/projetos/times/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\treturn {\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * @public\n\t\t */\n\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\tsEntity = \"Times\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure there is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUri: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\n\t\t}\n\t};\n\n});",
		"com/projetos/times/model/GroupSortState.js": "sap.ui.define([\n\t\"sap/ui/base/Object\",\n\t\"sap/ui/model/Sorter\"\n], function(BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"com.projetos.times.model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @alias com.projetos.times.model.GroupSortState\n\t\t */\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by Nome, or by \n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function(sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by , or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function(sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Nome\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"com/projetos/times/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t},\n\n\t\tcreateFLPModel: function() {\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\toModel = new JSONModel({\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t});\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\t};\n\n});"
	}
});